/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Clinico.Vistas;

import Clinico.Modulos.CRUD_Recibo;
import static Clinico.Modulos.CRUD_Recibo.listaTablaRecibo;
import Clinico.Controladores.Conexion;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Paragraph;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author ulise
 */
public class JFMostrar_InClinico extends javax.swing.JFrame {
    //OBJETO PARA INTERACTUAR CON LA TABLA
    DefaultTableModel model;
    int ID;
    int fila;
    /**
     * Creates new form JFMostrar_InClinico
     */
    public JFMostrar_InClinico() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //SE VINCULA CON LA TABLA
        model = (DefaultTableModel) this.TableInClinico.getModel();
        //FUNCION PARA LLENAR LA TABLA
        Llenar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableInClinico = new javax.swing.JTable();
        BtnEliminar = new javax.swing.JButton();
        BtnImprimir = new javax.swing.JButton();
        BtnCrear = new javax.swing.JButton();
        TxtTotalExamen = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtBuscar = new javax.swing.JTextField();
        BtnBuscar = new javax.swing.JButton();
        BtnRellenar = new javax.swing.JButton();
        BtnDetalles = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("MOSTRAR INFORMES DE EXAMENES CLINICOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        TableInClinico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NomCliente", "Edad", "Precio", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableInClinico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableInClinicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableInClinico);
        if (TableInClinico.getColumnModel().getColumnCount() > 0) {
            TableInClinico.getColumnModel().getColumn(0).setMinWidth(70);
            TableInClinico.getColumnModel().getColumn(0).setPreferredWidth(2);
            TableInClinico.getColumnModel().getColumn(0).setMaxWidth(70);
            TableInClinico.getColumnModel().getColumn(2).setMinWidth(70);
            TableInClinico.getColumnModel().getColumn(2).setPreferredWidth(5);
            TableInClinico.getColumnModel().getColumn(2).setMaxWidth(70);
            TableInClinico.getColumnModel().getColumn(3).setMinWidth(70);
            TableInClinico.getColumnModel().getColumn(3).setPreferredWidth(5);
            TableInClinico.getColumnModel().getColumn(3).setMaxWidth(70);
            TableInClinico.getColumnModel().getColumn(4).setMinWidth(120);
            TableInClinico.getColumnModel().getColumn(4).setPreferredWidth(10);
            TableInClinico.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        BtnEliminar.setText("Eliminar");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        BtnImprimir.setText("PDF");
        BtnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnImprimirActionPerformed(evt);
            }
        });

        BtnCrear.setText("Crear");
        BtnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCrearActionPerformed(evt);
            }
        });

        TxtTotalExamen.setText("0.0");

        jLabel7.setText("PRECIO TOTAL:");

        TxtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBuscarActionPerformed(evt);
            }
        });

        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });

        BtnRellenar.setText("Rellenar tabla");
        BtnRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRellenarActionPerformed(evt);
            }
        });

        BtnDetalles.setText("Detalles");
        BtnDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnDetalles)
                    .addComponent(BtnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(TxtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(BtnBuscar)
                .addGap(106, 106, 106)
                .addComponent(BtnRellenar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(TxtTotalExamen)
                .addGap(306, 306, 306))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBuscar)
                    .addComponent(BtnRellenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(BtnDetalles)
                        .addGap(47, 47, 47)
                        .addComponent(BtnEliminar)
                        .addGap(68, 68, 68)
                        .addComponent(BtnImprimir)
                        .addGap(67, 67, 67)
                        .addComponent(BtnCrear))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TxtTotalExamen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableInClinicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableInClinicoMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_TableInClinicoMouseClicked

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        // TODO add your handling code here:
        
        int fila = TableInClinico.getSelectedRow();
        ID = 0;
        
        if(fila == -1){
            JOptionPane.showMessageDialog(null, "NO SE A SELECIONADO FILA");
        }
        else{
            ID = Integer.parseInt((String) TableInClinico.getValueAt(fila, 0).toString());
            
            CRUD_Recibo CrRecibo = new CRUD_Recibo();
            CrRecibo.Eliminar(ID);
        }
        
        model.setRowCount(0);
        Llenar();
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCrearActionPerformed
        // TODO add your handling code here:
        //OBJETO PARA INTERACTUAR CON EL JFCrear_InContable
        JFCrear_InClinico InClinico = new JFCrear_InClinico();
        //SE INDICA QUE SE MUESTRE LA VENTANA
        InClinico.setVisible(true);
        //SE OCULTA LA VENTANA ACTUAL
        this.dispose();
    }//GEN-LAST:event_BtnCrearActionPerformed

    private void TxtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBuscarActionPerformed

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
        // TODO add your handling code here
        
        BuscarEnTabla(TxtBuscar.getText());
        
    }//GEN-LAST:event_BtnBuscarActionPerformed

    private void BtnRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRellenarActionPerformed
        // TODO add your handling code here:
        
        Llenar();
        
    }//GEN-LAST:event_BtnRellenarActionPerformed

    private void BtnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnImprimirActionPerformed
        // TODO add your handling code here:
        Document documento = new Document();
        
        try{
            String ruta = System.getProperty("user.home");
            
            System.out.println(ruta);
            
            PdfWriter.getInstance(documento, new FileOutputStream(ruta +"/Desktop/InformeClinico.pdf"));
            
            documento.open();
            
            Paragraph parrafo = new Paragraph();
            
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("LABORATORIO CLINICO DE ANALISIS HENDRYKS\n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));
            
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Informacion de los Examenes Clinicos. \n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

            documento.add(parrafo);
            
            PdfPTable tablaCliente = new PdfPTable(5);
            tablaCliente.addCell("ID");
            tablaCliente.addCell("Nombre Cliente");
            tablaCliente.addCell("Edad Cliente");
            tablaCliente.addCell("Precio Total");
            tablaCliente.addCell("Fecha");
            
            try{
                String sql = "SELECT * FROM TBL_Recibo";
                Conexion  cn = new Conexion();
                cn.CrearTablas();
                PreparedStatement pst = cn.conexion.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                
                if(rs.next()){
                    do{
                        tablaCliente.addCell(rs.getString(1));
                        tablaCliente.addCell(rs.getString(2));
                        tablaCliente.addCell(rs.getString(3));
                        tablaCliente.addCell(rs.getString(4));
                        tablaCliente.addCell(rs.getString(5));
                    } while(rs.next());
                    documento.add(tablaCliente);
                }
                
                parrafo.clear();
                
                parrafo.setAlignment(Paragraph.ALIGN_LEFT);
                parrafo.add("PRECIO TOTAL: "+TxtTotalExamen.getText()+"\n \n");
                parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

                documento.add(parrafo);

                documento.close();
                
            }catch (SQLException ex) {
                Logger.getLogger(JFMostrar_InClinico.class.getName()).log(Level.SEVERE, null, ex);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte creado correctamente");
            
        }catch (FileNotFoundException ex) {
            Logger.getLogger(JFMostrar_InClinico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(JFMostrar_InClinico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnImprimirActionPerformed

    private void BtnDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDetallesActionPerformed
        // TODO add your handling code here:
        
        int ID_Recibo;
        fila = TableInClinico.getSelectedRow();
        
        ID_Recibo = Integer.parseInt(TableInClinico.getValueAt(fila, 0).toString());
        
        //OBJETO PARA INTERACTUAR CON EL JFCrear_InContable
        if(fila != -1){
            
            JFDetalles Agregar_Datos = new JFDetalles(ID_Recibo);

            //SE INDICA QUE SE MUESTRE LA VENTANA
            Agregar_Datos.setVisible(true);
            //SE OCULTA LA VENTANA ACTUAL
            this.dispose();

        }else{
            JOptionPane.showMessageDialog(null, "NO SE A SELECIONADO FILA");
        }
        
    }//GEN-LAST:event_BtnDetallesActionPerformed

    public void Llenar(){
        Double Total = 0.0;
        
        //SE LIMPIA LA TABLA
        model.setRowCount(0);
        //OBJETO PARA ENTERACTUAR CON EL CRUD
        CRUD_Recibo CrRecibo = new CRUD_Recibo();
        //SE LLENA EL ARREGLO CON LOS VALORES DE LA TABLA
        CrRecibo.LlenarTabla();
        //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO
        for(int PosC = 0; PosC < listaTablaRecibo.size(); PosC++){

            model.addRow(new Object[]{listaTablaRecibo.get(PosC).getID()
                    ,listaTablaRecibo.get(PosC).getNombre_Cliente(), listaTablaRecibo.get(PosC).getEdad_Cliente()
                    ,listaTablaRecibo.get(PosC).getPrecioTotal_Examen(),listaTablaRecibo.get(PosC).getFecha()});
            
            Total = Total+listaTablaRecibo.get(PosC).getPrecioTotal_Examen();
        }
        
        TxtTotalExamen.setText(""+Total);
        
    }
    
    public void BuscarEnTabla(String buscar){
        
        Double Total = 0.0;
        
        //SE LIMPIA LA TABLA
        model.setRowCount(0);
        //OBJETO PARA ENTERACTUAR CON EL CRUD
        CRUD_Recibo cr = new CRUD_Recibo();
        
        cr.BuscarEnTabla(buscar);
        
        //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO
        for(int PosC = 0; PosC < listaTablaRecibo.size(); PosC++){

            model.addRow(new Object[]{listaTablaRecibo.get(PosC).getID()
                    ,listaTablaRecibo.get(PosC).getNombre_Cliente(), listaTablaRecibo.get(PosC).getEdad_Cliente()
                    ,listaTablaRecibo.get(PosC).getPrecioTotal_Examen(),listaTablaRecibo.get(PosC).getFecha()});
            
            Total = Total+listaTablaRecibo.get(PosC).getPrecioTotal_Examen();
        }
        
        TxtTotalExamen.setText(""+Total);

        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFMostrar_InClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFMostrar_InClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFMostrar_InClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFMostrar_InClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFMostrar_InClinico().setVisible(true);
                
                //OBJETO PARA ENTERACTUAR CON LA CONEXION
                Conexion conec = new Conexion();
                //CREA REALIZA LA CONEXION Y CREA LA TABLA SI NO HAY
                conec.CrearTablas();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnCrear;
    private javax.swing.JButton BtnDetalles;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnImprimir;
    private javax.swing.JButton BtnRellenar;
    private javax.swing.JTable TableInClinico;
    private javax.swing.JTextField TxtBuscar;
    private javax.swing.JLabel TxtTotalExamen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
