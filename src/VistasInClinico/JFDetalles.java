/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VistasInClinico;

import InClinico.Controladores.Conexion;
import InClinico.Controladores.DatosExamenes;
import InClinico.Controladores.ExamenClinico;
import InClinico.Controladores.Recibo;
import InClinico.Modulos.CRUD_Recibo;
import InClinico.Modulos.CRUD_ExamenClinico;
import InClinico.Modulos.CRUD_DatosExamenes;
import static InClinico.Modulos.CRUD_DatosExamenes.listaDatosExamenes;
import static InClinico.Modulos.CRUD_ExamenClinico.listaExClinico;
import static InClinico.Modulos.CRUD_Recibo.listaTablaRecibo;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ulise
 */
public class JFDetalles extends javax.swing.JFrame {
    public static int IDRecibo;
    DefaultTableModel model;
    //LISTA PARA ALMACENAR LOS DATOS OBTENIDOS DE LA BASE DE DATOS
    public static List<Recibo> listaRecibo = new ArrayList<Recibo>(); 

    /**
     * Creates new form JFDetalles
     */
    public JFDetalles(int ID_Recibo) {
        initComponents();
        this.setLocationRelativeTo(null);

        //SE VINCULA CON LA TABLA
        model = (DefaultTableModel) this.TableInDetalles.getModel();

        IDRecibo = ID_Recibo;
        
        LlenarRecivo(ID_Recibo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRecibo6 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        TxtNomPacienteDetalles = new javax.swing.JLabel();
        TxtFechaDetalles = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TableInDetalles = new javax.swing.JTable();
        TxtPrecioTotal = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        BtnRegreso = new javax.swing.JButton();
        BtnPDF = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelRecibo6.setBackground(new java.awt.Color(204, 204, 255));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setText("RECIBO DE EXAMENES REALIZADOS");

        jLabel31.setText("NOMBRE");

        TxtNomPacienteDetalles.setText("NOMBRE PACIENTE");

        TxtFechaDetalles.setText("FECHA");

        TableInDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Examen", "Valor", "Unidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableInDetalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableInDetallesMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(TableInDetalles);

        TxtPrecioTotal.setText("TOTAL");

        jLabel32.setText("PRECIO TOTAL:");

        jLabel33.setText("LABORATORIO CLINICO DE ANALISIS HENDRYKS");

        javax.swing.GroupLayout jPanelRecibo6Layout = new javax.swing.GroupLayout(jPanelRecibo6);
        jPanelRecibo6.setLayout(jPanelRecibo6Layout);
        jPanelRecibo6Layout.setHorizontalGroup(
            jPanelRecibo6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecibo6Layout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(TxtPrecioTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32))
            .addGroup(jPanelRecibo6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addGap(5, 5, 5))
            .addGroup(jPanelRecibo6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtNomPacienteDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(102, 102, 102)
                .addComponent(TxtFechaDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecibo6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelRecibo6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecibo6Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecibo6Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(129, 129, 129))))
        );
        jPanelRecibo6Layout.setVerticalGroup(
            jPanelRecibo6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecibo6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRecibo6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(TxtNomPacienteDetalles)
                    .addComponent(TxtFechaDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelRecibo6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TxtPrecioTotal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(5, 5, 5))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        BtnRegreso.setText("Regresar");
        BtnRegreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresoActionPerformed(evt);
            }
        });

        BtnPDF.setText("Crear PDF");
        BtnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(BtnRegreso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnPDF)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRegreso)
                    .addComponent(BtnPDF))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("DETALLES DE EXAMEN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(150, 150, 150))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelRecibo6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRecibo6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableInDetallesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableInDetallesMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_TableInDetallesMouseClicked

    private void BtnRegresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresoActionPerformed
        // TODO add your handling code here:
        //OBJETO PARA INTERACTUAR CON EL JFMostrar_InClinico
        JFMostrar_InClinico Mostrar = new JFMostrar_InClinico();
        //SE INDICA QUE SE MUESTRE LA VENTANA
        Mostrar.setVisible(true);
        //SE OCULTA LA VENTANA ACTUAL
        this.dispose();
        
    }//GEN-LAST:event_BtnRegresoActionPerformed

    private void BtnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPDFActionPerformed
        // TODO add your handling code here:
        
        for(int posEx = 0; posEx < listaExClinico.size(); posEx++){
            
            if(listaExClinico.get(posEx).getID_Recibo() == IDRecibo){
                
                PDFExamenes(posEx);
                
            }
        }
        
        JOptionPane.showMessageDialog(null, "Reporte creado correctamente");
        
    }//GEN-LAST:event_BtnPDFActionPerformed

    public void LlenarRecivo(int ID_ReciboExamen){
        Recibo recibo = new Recibo();
        
        TxtNomPacienteDetalles.setText("");
        TxtFechaDetalles.setText("");
        
        Double Total = 0.0;        
        //SE LIMPIA LA TABLA
        model.setRowCount(0);
        //OBJETO PARA ENTERACTUAR CON EL CRUD
        CRUD_Recibo CrRecibo = new CRUD_Recibo();
        //SE LLENA EL ARREGLO CON LOS VALORES DE LA TABLA
        CrRecibo.LlenarTabla();
        //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO

        for(int PosR = 0; PosR < listaTablaRecibo.size(); PosR++){
            
            if(listaTablaRecibo.get(PosR).getID() == ID_ReciboExamen){

                TxtNomPacienteDetalles.setText(listaTablaRecibo.get(PosR).getNombre_Cliente());
                TxtFechaDetalles.setText(listaTablaRecibo.get(PosR).getFecha());
                
                Total = listaTablaRecibo.get(PosR).getPrecioTotal_Examen();
                
                recibo.setNombre_Cliente(listaTablaRecibo.get(PosR).getNombre_Cliente());
                recibo.setEdad_Cliente(listaTablaRecibo.get(PosR).getEdad_Cliente());
                recibo.setFecha(listaTablaRecibo.get(PosR).getFecha());
                
                //SE AGREGA EL CONSTRUCTOR AL ARREGLO
                listaRecibo.add(recibo);

                LlenarExamen(ID_ReciboExamen);

            }

        }
        
        TxtPrecioTotal.setText(""+Total);
        
    }
    
    public void LlenarExamen(int ID_Recibo){
        ExamenClinico examenClinico = new ExamenClinico();
        //OBJETO PARA ENTERACTUAR CON EL CRUD
        CRUD_ExamenClinico CrExameneclinicos = new CRUD_ExamenClinico();
        //SE LLENA EL ARREGLO CON LOS VALORES DE LA TABLA
        CrExameneclinicos.LlenarTabla();
        
        for(int PosE = 0; PosE < listaExClinico.size(); PosE++){
            
            if(listaExClinico.get(PosE).getID_Recibo() == ID_Recibo){
                
                model.addRow(new Object[]{listaExClinico.get(PosE).getNombre_Examen(),"",""});
                
                LlenarDatosExamen(listaExClinico.get(PosE).getID());

            }
                
        }
        
    }
    
    public void LlenarDatosExamen(int ID_Examen){
        //OBJETO PARA ENTERACTUAR CON EL CRUD
        CRUD_DatosExamenes CrExameneclinicos = new CRUD_DatosExamenes();
        //SE LLENA EL ARREGLO CON LOS VALORES DE LA TABLA
        CrExameneclinicos.LlenarListaDatosExamenes();
        
        for(int PosDE = 0; PosDE < listaDatosExamenes.size(); PosDE++){
            
            if(listaDatosExamenes.get(PosDE).getIDExamen() == ID_Examen){
                model.addRow(new Object[]{listaDatosExamenes.get(PosDE).getDato(),
                                      listaDatosExamenes.get(PosDE).getValor(),
                                      listaDatosExamenes.get(PosDE).getUnidad()});
                
            }
        }
        
    }
    
    public void PDFExamenes(int posEx){
        
        boolean Auxiliar = true;
        Document documento = new Document();

        try {
            
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta +"/Desktop/" 
                    +listaRecibo.get(0).getNombre_Cliente()+"_"
                    +listaExClinico.get(posEx).getNombre_Examen().trim()+ ".pdf"));
            
            documento.open();
            
            Paragraph parrafo = new Paragraph();
            
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("LABORATORIO CLINICO DE ANALISIS HENDRYKS\n \n");
            parrafo.add("Lotificación Avilés frente a Lotificacion San Emilio,\n");
            parrafo.add("Santa Elena, Usulután\n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.add(parrafo);
            parrafo.clear();
            
            parrafo.setAlignment(Paragraph.ALIGN_LEFT);
            parrafo.add("DOCTOR(A): \n \n");
            parrafo.add("PACIENTE: "+listaRecibo.get(0).getNombre_Cliente()+"       "
                     + "EDAD: "+listaRecibo.get(0).getEdad_Cliente()+"\n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 12, Font.BOLD, BaseColor.DARK_GRAY));

            documento.add(parrafo);
            parrafo.clear();

            parrafo.setAlignment(Paragraph.ALIGN_LEFT);
            parrafo.add("EXAMEN: "+listaExClinico.get(posEx).getNombre_Examen()+"\n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 12, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.add(parrafo);
            
            //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO
            for(int posDE = 0; posDE < listaDatosExamenes.size(); posDE++){

                if(listaDatosExamenes.get(posDE).getIDExamen() 
                    == listaExClinico.get(posEx).getID()){
                    
                    if("".equals(listaDatosExamenes.get(posDE).getUnidad())){
                        Auxiliar = false;
                    }
                    
                }
            }

            if(Auxiliar){
                
                PdfPTable tablaCliente = new PdfPTable(3);
                tablaCliente.addCell("Prueba");
                tablaCliente.addCell("Valor");
                tablaCliente.addCell("Unidad");
                
                //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO
                for(int posDE = 0; posDE < listaDatosExamenes.size(); posDE++){
                    
                    if(listaDatosExamenes.get(posDE).getIDExamen()
                            == listaExClinico.get(posEx).getID()){
                        
                        tablaCliente.addCell(listaDatosExamenes.get(posDE).getDato());
                        tablaCliente.addCell(listaDatosExamenes.get(posDE).getValor());
                        tablaCliente.addCell(listaDatosExamenes.get(posDE).getUnidad());
                        
                    }
                    
                }
                
                documento.add(tablaCliente);
            }else{
                
                PdfPTable tablaCliente = new PdfPTable(2);
                tablaCliente.addCell("Prueba");
                tablaCliente.addCell("Valor");

                //CICLO PARA LLENAR LA TABLA CON LOS VALORES DEL ARREGLO
                for(int posDE = 0; posDE < listaDatosExamenes.size(); posDE++){
                    
                    if(listaDatosExamenes.get(posDE).getIDExamen()
                            == listaExClinico.get(posEx).getID()){
                        
                        tablaCliente.addCell(listaDatosExamenes.get(posDE).getDato());
                        tablaCliente.addCell(listaDatosExamenes.get(posDE).getValor());
                        
                    }
                    
                }

                documento.add(tablaCliente);
    
            }
          
            parrafo.clear();

            parrafo.setAlignment(Paragraph.ALIGN_LEFT);
            parrafo.add(listaRecibo.get(0).getFecha()+"\n \n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.add(parrafo);
            
            documento.close();  
            
        }catch (FileNotFoundException ex) {
            Logger.getLogger(JFMostrar_InClinico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(JFMostrar_InClinico.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFDetalles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                //OBJETO PARA ENTERACTUAR CON LA CONEXION
                Conexion conec = new Conexion();
                //CREA REALIZA LA CONEXION Y CREA LA TABLA SI NO HAY
                conec.CrearTablas();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPDF;
    private javax.swing.JButton BtnRegreso;
    private javax.swing.JTable TableInDetalles;
    private javax.swing.JLabel TxtFechaDetalles;
    private javax.swing.JLabel TxtNomPacienteDetalles;
    private javax.swing.JLabel TxtPrecioTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelRecibo6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
